#include <stdio.h>
#define MAX 128



void zere_tabuleiro(int tabuleiro[MAX][MAX], int nlin, int ncol);

void leia_configuracao_inicial(int tabuleiro[MAX][MAX],int *nlin, int *ncol);

void imprima_tabuleiro(int tabuleiro[MAX][MAX],int nlin, int ncol);

int espalhe(int tabuleiro[MAX][MAX], int ativacao[MAX][MAX],int nlin, int ncol, int instante, int *novosativados);

void conte_vizinhos(int tabuleiro[MAX][MAX],int nlin, int ncol); /*estabelece uma matriz que corresponde a quantidade de vizinhos de cada posição*/




int main()
{
	
return 0;	
}

void zere_tabuleiro(int tabuleiro[MAX][MAX], int nlin, int ncol)
{
	int i,j;
	
	for (i=0;i<nlin;i++)
	{
		for(j=0;j<ncol;j++)
		{
			tabuleiro[i][j]=0;				
		}
}	

void imprima_tabuleiro(int tabuleiro[MAX][MAX],int nlin, int ncol)
{
	int i,j;
	
	for(i=0; i < nlin; i++) {
		
		if(i == 0) {
			// print header
			for(j=0; j < ncol; j++) {
				if(j == 0) printf("   ");
				
				printf("  %d  ", j);
			}
			
			printf("\n");
			
			for(j=0; j < ncol; j++) {
				if(j == 0) printf("  +");
				
				printf("-----+");
			}
			printf("\n");
		}
		
		printf("%d |", i);
		
		// values
		for(j=0; j < ncol; j++) {
			printf("  %d  |", tabuleiro[i][j]);
		}
		
		printf("\n");
		
		// linha
		for(j=0; j < ncol; j++) {
			if(j == 0) printf("  +");
			
			printf("-----+");
		}
		printf("\n");
	}
	    
}

void conte_vizinhos(int tabuleiro[MAX][MAX],int nlin, int ncol)
{
	int i, j;
	int nlin,ncol;
	int tabuleiro[MAX][MAX];
	int vizinhos[MAX][MAX];
	
	scanf("%d %d", &nlin, ncol);
	
	for(i=0;i<nlin;i++)         /*Percorrendo a matriz tabuleiro*/
	{
		for(j=0;j<ncol;j++)
		{
			vizinhos[i][j]=0;
			tabuleiro[i][j]=0;   /*inicializando as duas matrizes como zero*/
			
			if((i>0 && i<nlin)&&(j>0 && j<ncol))  /*condição para ter 4 vizinhos*/
			{
				for(i=1;i<nlin;i++)   /*Percorrendo a matriz de vizinhos*/
				{
					for(j=1;j<ncol;j++)
					{
						vizinhos[i][j]=4;	
					}
				}
			}
			
			if((i==0||i==nlin)&&(j==0||j==ncol))  /*condição para 2 vizinhos*/
			{
				vizinhos[0][0]=2;
				vizinhos[0][ncol]=2;
				vizinhos[nlin][0]=2;
				vizinhos[nlin][ncol]=2;
			}
			
			if((i==0||i==nlin)&&(j<ncol&&j>0)) /*condição para 3 vizinhos 1a e ultima linha*/
			{
				for(i=0||i=nlin;;)
				{
					for(j=1;j<ncol;j++)
					{
						vizinhos[i][j]=3;
						
					}
						
				}
			}
			
			if((i>0&&i<nlin)&&(j==0||j==ncol) /*condição 3 vizinhos nas laterais*/
			{
				for(i=1;i<nlin;i++)
				{
					for(j=0||j=ncol;;)
					{
						vizinhos[i][j]=3;
					}
				}
				
			}
		}
		
		
	}
	
}
